import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,e as i}from"./app-DpuuZBWg.js";const l={},n=i(`<p>This plugin is basically facing plugins and theme development.</p><h2 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span>ID</span></a></h2><p>To get started, you should understand that this plugin is designed to take across plugins and theme (unlike the official one only for theme).</p><p>We are providing <code>id</code> option to do that, and using this plugin (by calling <code>useSassPalette</code>) with same ID won&#39;t have any side effects. Also, all the alias and module names have an ID prefix.</p><p>This will allow you to:</p><ul><li><p>Share same style system across your plugins (or themes) using same ID without any side effects.</p><p>This means you can use same style variables across your plugins (or themes) to get your style unify.</p><div class="hint-container tip"><p class="hint-container-title">Example</p><p><code>vuepress-theme-hope</code> and all its plugins are invoking this plugin with same ID <code>hope</code>, so that all the color variables, breakpoints and other style configuration can be done at same file and be unified across theme and plugins.</p></div></li><li><p>With different ID, plugins and theme won&#39;t affect others. We recommend you to set the <code>id</code> variable with your plugin name.</p><p>With the default settings, users will set your plugin style under <code>.vuepress/styles</code> directory with Sass files starting with your ID prefix. And you can access the variables you need with <code>\${id}-config</code>.</p><div class="hint-container tip"><p class="hint-container-title">Example</p><p><code>vuepress-theme-hope</code> is using ID <code>&quot;hope&quot;</code>, and just imagine a <code>vuepress-plugin-abc</code> is using <code>&quot;abc&quot;</code>. They can get their own variables with module name <code>hope-config</code> and <code>abc-config</code>.</p></div></li></ul><h2 id="styles" tabindex="-1"><a class="header-anchor" href="#styles"><span>Styles</span></a></h2><p>We have three style concepts here: config, palette and generator.</p><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>Config</span></a></h2><p>Config file is used for Sass variable only. It holds Sass variables which can be used in other files later.</p><p>You can specify a file (probably in <code>.vuepress/styles/</code> directory) as user config file. So you can get the module containing every variable later in Sass files. Also, you are able to provide a default config files where you can place fallback values for variables with <code>!default</code>.</p><details class="hint-container details"><summary>An example</summary><p>Here you are invoking the plugin with the following options:</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">useSassPalette</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">app</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">  id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;abc&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">  defaultConfig</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;vuepress-plugin-abc/styles/config.scss&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><p>If the user sets:</p><div class="language-scss" data-ext="scss" data-title=".vuepress/styles/abc-palette.scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$colorA</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">red</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre></div><p>And you are providing a default config file with:</p><div class="language-scss" data-ext="scss" data-title="vuepress-plugin-abc/styles/palette.scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$colorA</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">blue</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> !default</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$colorB</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">green</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> !default</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre></div><p>You can get the following variables in the plugin Sass files:</p><div class="language-scss" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// &lt;style lang=&quot;scss&quot;&gt; block in vue sfc or scss file directly imported in scripts</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">@debug</span><span style="color:#E36209;--shiki-dark:#E06C75;"> abc-config</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#E36209;--shiki-dark:#E06C75;">$colorA</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// red</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">@debug</span><span style="color:#E36209;--shiki-dark:#E06C75;"> abc-config</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#E36209;--shiki-dark:#E06C75;">$colorB</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// green</span></span>
<span class="line"></span></code></pre></div></details><h3 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations"><span>Limitations</span></a></h3><p>We are using <code>additionalData</code> options to let <code>\${id}-config</code> module available in your styles, but this has some limitations.</p><p><code>additionalData</code> only works on Scss entry, so <code>\${id}-config</code> is available only in :</p><ul><li><code>&lt;style lang=&quot;scss&quot;&gt;</code> block in component files</li><li>Scss files imported by script files directly (e.g.: <code>import &quot;./a-scss-file.scss&quot;</code> in client app enhance file).</li></ul><p>If the Scss file is not imported directly, but is imported through <code>@use</code> or <code>@import</code> api, the module won&#39;t be available. So that in this case, you should import the module yourself using <code>@use &quot;@sass-palette/\${id}-config&quot;;</code>.</p><h3 id="preserved-variables" tabindex="-1"><a class="header-anchor" href="#preserved-variables"><span>Preserved Variables</span></a></h3><p><code>$dark-selector</code> is preserved for darkmode selector. You are expected to set this variable if you want your plugin or theme support darkmode. This variable will be used later in palette files.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><ul><li><p>If you are developing a plugin, you may set <code>$dark-selector: html.dark !default;</code> in default config files, as <code>@vuepress/theme-default</code> is doing that.</p><p>Your plugin will work with default theme, and users are allowed to change this selector in config file if they are using a third-party theme with different dark selector.</p></li><li><p>If you are developing a theme, you may set <code>$dark-selector</code> in default config files with your darkmode selector without <code>!default</code>, so that users cannot override it.</p></li></ul></div><h2 id="palette" tabindex="-1"><a class="header-anchor" href="#palette"><span>Palette</span></a></h2><p>Palette files are used for CSS variable injection, where each variable will be injected in to root with kebab-name of variable name.</p><p>You can specify a file (probably in <code>.vuepress/styles/</code> directory) as user palette file, and the default filename is <code>\${id}-palette.scss</code>. Also, you are able to provide a default palette files where you can place fallback values for variables with <code>!default</code>.</p><details class="hint-container details"><summary>An example</summary><p>Here you are invoking the plugin with following options:</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;--shiki-dark:#61AFEF;">useSassPalette</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#E06C75;">app</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">  id</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;abc&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E06C75;">  defaultPalette</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;vuepress-plugin-abc/styles/palette.scss&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><p>If users are setting:</p><div class="language-scss" data-ext="scss" data-title=".vuepress/styles/abc-palette.scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$colorA</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">red</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre></div><p>And you are providing a default palette file with:</p><div class="language-scss" data-ext="scss" data-title="vuepress-plugin-abc/styles/palette.scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$colorA</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">blue</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> !default</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$colorB</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">green</span><span style="color:#D73A49;--shiki-dark:#C678DD;"> !default</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre></div><p>Then the below CSS variables will be available under root selector:</p><div class="language-scss" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;--shiki-dark:#56B6C2;">:root</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">  --color-a</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">red</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">  --color-b</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">green</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div></details><h3 id="color-settings" tabindex="-1"><a class="header-anchor" href="#color-settings"><span>Color Settings</span></a></h3><p>Since the default theme is providing darkmode, so you probably want different colors under lightmode and darkmode.</p><p>To achieve that, you should set color variables with a map containing <code>light</code> and <code>dark</code> keys. Later, the plugin will read <code>$dark-selector</code> in your config and generate different colors for you.</p><details class="hint-container details"><summary>An example</summary><div class="language-scss line-numbers-mode" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// User palette</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$text-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: (</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#ABB2BF;">  light</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#222</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#ABB2BF;">  dark</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#999</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// Default palette</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$text-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: (</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#ABB2BF;">  light</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#2c3e50</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#ABB2BF;">  dark</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#9e9e9e</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">!default</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$bg-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: (</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#ABB2BF;">  light</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#fff</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#ABB2BF;">  dark</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#1e1e1e</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">!default</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then if <code>$dark-selector</code> has a value <code>&quot;html.dark&quot;</code> in config files, you will get:</p><div class="language-scss" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;--shiki-dark:#56B6C2;">:root</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">  --text-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#222</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">  --bg-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#fff</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;--shiki-dark:#E06C75;">html</span><span style="color:#6F42C1;--shiki-dark:#D19A66;">.dark</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">  --text-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#999</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">  --bg-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#D19A66;">#1e1e1e</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div></details><h3 id="allowed-variable-types" tabindex="-1"><a class="header-anchor" href="#allowed-variable-types"><span>Allowed Variable Types</span></a></h3><p>Only colors (or color map), length and strings are allowed in palette. Any other type will be dropped.</p><div class="hint-container note"><p class="hint-container-title">Why only allow color and length besides strings</p><p>In common situations, you probably only want to make calculations with color and length. So it&#39;s quite safe to drop other type support, because any other value you want can be converted to string.</p><details class="hint-container details"><summary>Example</summary><p>If you want a <code>--move-transition</code> with <code>width 0.3s ease</code>, you can use strings:</p><div class="language-scss" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// this will be regarded as a list with (length, time, function) by Sass</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// and will trigger a warning and be dropped by plugin</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$moveTransition</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#005CC5;--shiki-dark:#ABB2BF;">width</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 0.3</span><span style="color:#D73A49;--shiki-dark:#E06C75;">s</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> ease</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// this will get what you want</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// :root {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">//   --move-transition: width 0.3s ease</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#7F848E;font-style:inherit;--shiki-dark-font-style:italic;">// }</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$moveTransition</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;width 0.3s ease&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre></div></details></div><div class="hint-container tip"><p class="hint-container-title">Available in config module</p><p>Same as config file, any variables in palette will be injected into <code>\${id}-config</code> module, just in case you want to use them in Sass files.</p></div><h2 id="helper" tabindex="-1"><a class="header-anchor" href="#helper"><span>Helper</span></a></h2><p>We are exposing internal functions which <code>vuepress-plugin-sass-palette</code> uses, as a helper module.</p><p>You can use this helper with <code>@sass-palette/helper</code> alias and call its function to achieve similar features yourself.</p><h2 id="generator" tabindex="-1"><a class="header-anchor" href="#generator"><span>Generator</span></a></h2><p>Generator file is facing developers to generate derivative values with config or palette file variables.</p><p>Generator variables will be also injected as CSS variables like palette, and also they are available in config module.</p><details class="hint-container details"><summary>Example</summary><p>You may want a <code>$theme-color-light</code> based on <code>$theme-color</code>. So you can write a generator like this:</p><div class="language-scss" data-ext="scss" data-title="scss"><pre class="shiki shiki-themes github-light one-dark-pro" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">@use</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;sass:color&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">@use</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;sass:list&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">@use</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;sass:map&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">@use</span><span style="color:#032F62;--shiki-dark:#98C379;"> &quot;@sass-palette/helper&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#E06C75;">$theme-color-light</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: (</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#ABB2BF;">  light</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#E36209;--shiki-dark:#E06C75;">color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">scale</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;">helper</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">get-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;">$theme-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">), </span><span style="color:#E36209;--shiki-dark:#E06C75;">$lightness</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">:</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="color:#D73A49;--shiki-dark:#E06C75;">%</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#ABB2BF;">  dark</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#E36209;--shiki-dark:#E06C75;">color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">scale</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;">helper</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="color:#005CC5;--shiki-dark:#56B6C2;">get-dark-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;">$theme-color</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">), </span><span style="color:#E36209;--shiki-dark:#E06C75;">$lightness</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">:</span><span style="color:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="color:#D73A49;--shiki-dark:#E06C75;">%</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="color:#D73A49;--shiki-dark:#C678DD;">!default</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre></div></details><h2 id="user-styles" tabindex="-1"><a class="header-anchor" href="#user-styles"><span>User Styles</span></a></h2><p>If you are a theme developer, you may probably want to provide your users a way to custom your theme or the site.</p><p>In this case you should set <code>style</code> option as the user style file when using this plugin.</p><p>Later, you should manually include user style file by importing <code>@sass-palette/\${id}-style</code> <strong>after your theme styles</strong>.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p><code>@sass-palette/\${id}-style</code> is an alias to user style file, and you can import it in JS/TS/SASS.</p></div><h2 id="alias" tabindex="-1"><a class="header-anchor" href="#alias"><span>Alias</span></a></h2><p>Available alias are:</p><ul><li>config: <code>@sass-palette/\${id}-config</code> (based on <code>id</code>)</li><li>palette: <code>@sass-palette/\${id}-palette</code> (based on <code>id</code>)</li><li>style: <code>@sass-palette/\${id}-style</code> (only available when <code>style</code> option is set)</li><li>helper: <code>@sass-palette/helper</code></li></ul>`,47),o=[n];function t(r,p){return a(),e("div",null,o)}const h=s(l,[["render",t],["__file","guide.html.vue"]]),k=JSON.parse('{"path":"/guide.html","title":"Guide","lang":"en-US","frontmatter":{"title":"Guide","icon":"lightbulb","description":"This plugin is basically facing plugins and theme development. ID To get started, you should understand that this plugin is designed to take across plugins and theme (unlike the...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://plugin-sass-palette.vuejs.press/zh/guide.html"}],["meta",{"property":"og:url","content":"https://plugin-sass-palette.vuejs.press/guide.html"}],["meta",{"property":"og:site_name","content":"Sass Palette"}],["meta",{"property":"og:title","content":"Guide"}],["meta",{"property":"og:description","content":"This plugin is basically facing plugins and theme development. ID To get started, you should understand that this plugin is designed to take across plugins and theme (unlike the..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-26T10:30:17.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2024-01-26T10:30:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Guide\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-26T10:30:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"ID","slug":"id","link":"#id","children":[]},{"level":2,"title":"Styles","slug":"styles","link":"#styles","children":[]},{"level":2,"title":"Config","slug":"config","link":"#config","children":[{"level":3,"title":"Limitations","slug":"limitations","link":"#limitations","children":[]},{"level":3,"title":"Preserved Variables","slug":"preserved-variables","link":"#preserved-variables","children":[]}]},{"level":2,"title":"Palette","slug":"palette","link":"#palette","children":[{"level":3,"title":"Color Settings","slug":"color-settings","link":"#color-settings","children":[]},{"level":3,"title":"Allowed Variable Types","slug":"allowed-variable-types","link":"#allowed-variable-types","children":[]}]},{"level":2,"title":"Helper","slug":"helper","link":"#helper","children":[]},{"level":2,"title":"Generator","slug":"generator","link":"#generator","children":[]},{"level":2,"title":"User Styles","slug":"user-styles","link":"#user-styles","children":[]},{"level":2,"title":"Alias","slug":"alias","link":"#alias","children":[]}],"git":{"createdTime":1644591089000,"updatedTime":1706265017000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":8},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":5},{"name":"Kemal Soylu","email":"kemalbsoylu@gmail.com","commits":1},{"name":"Nan Huang","email":"teddyhuangnan@gmail.com","commits":1}]},"readingTime":{"minutes":4.25,"words":1275},"filePathRelative":"guide.md","localizedDate":"February 11, 2022","autoDesc":true}');export{h as comp,k as data};
